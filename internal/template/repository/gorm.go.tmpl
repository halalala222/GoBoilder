package {{ .DB }}

import (
	"context"

	"gorm.io/gorm"

	"{{.ModulePath}}/domain"
)

type UserRepository struct {
	mysqlDB *gorm.DB
}

// NewUserRepository will create an object that represent the user.Repository interface
func NewUserRepository(db *gorm.DB) *UserRepository {
	return &UserRepository{
		mysqlDB: db,
	}
}

// GetUserByUserID will get user by userID
func (u *UserRepository) GetUserByUserID(ctx context.Context, userID int64) (*domain.User, error) {
	var (
		user *domain.User
	)
	
	err := u.mysqlDB.WithContext(ctx).Model(&domain.User{}).Where("id = ?", userID).First(&user).Error
	return user, err
}