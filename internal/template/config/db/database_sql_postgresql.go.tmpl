package config

import (
	"database/sql"
	"fmt"
	"os"
	"sync"

	_ "github.com/jackc/pgx/v5/stdlib"
	"github.com/spf13/viper"

	pkgLog "{{.ModulePath}}/internal/log"
	pkgLogger "{{.ModulePath}}/pkg/log"
)

var (
	db       *sql.DB
	dbOnce   sync.Once
)

func DB() *sql.DB {
    var (
        database = viper.GetString("db.database")
        password = viper.GetString("db.password")
        username = viper.GetString("db.username")
        port = viper.GetString("db.port")
        host = viper.GetString("db.host")
        schema = viper.GetString("db.schema")
    )

	dbOnce.Do(func() {
		connStr := fmt.Sprintf("postgres://%s:%s@%s:%s/%s?sslmode=disable&search_path=%s", username, password, host, port, database, schema)
		var err error
		if db, err = sql.Open("pgx", connStr); err != nil {
			panic(err)
		}
	})

	return db
}

func CloseDB() {
	if err := db.Close(); err != nil {
		pkgLog.Log().Error("sql db close error", pkgLogger.Field{Key: "err", Value: err})
	}
}
