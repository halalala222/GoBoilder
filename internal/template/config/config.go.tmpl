package config

import (
    {{ if eq .ConfigFileType "env" }}
    "strings"

    "github.com/joho/godotenv"
    "github.com/spf13/viper"
    {{else}}
    "github.com/spf13/viper"
    {{end}}
    "{{.ModulePath}}/internal/log"
    logger "{{.ModulePath}}/pkg/log"
)

const (
    {{ if eq .ConfigFileType "env" }}
    defaultConfigPath = ".env"
    {{ else if eq .ConfigFileType "yaml" }}
    defaultConfigPath = "config.yaml"
    {{ else if eq .ConfigFileType "json" }}
    defaultConfigPath = "config.json"
    {{ else if eq .ConfigFileType "toml" }}
    defaultConfigPath = "config.toml"
    {{end}}

)

func LoadConfig() {
    {{ if eq .ConfigFileType "env" }}
	if err := godotenv.Load(configPath); err != nil {
		panic(err)
	}
	{{end}}
	viper.SetConfigFile(defaultConfigPath)
	viper.AutomaticEnv()
	{{ if eq .ConfigFileType "env" }}
	viper.SetEnvKeyReplacer(strings.NewReplacer(`.`, `_`))
    viper.SetEnvPrefix("{{.ProjectName}}")
    {{end}}
	if err := viper.ReadInConfig(); err != nil {
		panic(err)
	}
}

func LogInit() {
	{{ if eq .LoggerLibrary "zap" }}
    log.RegisterLog(logger.NewSlogLogger())
    {{end}}
    {{ if eq .LoggerLibrary "slog" }}
    log.RegisterLog(logger.NewSlogLogger())
    {{end}}
}